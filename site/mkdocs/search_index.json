{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the Sitesfor.church site reps program.\n  We are constantly working on improving this documentation to make it easier for you to set up sites, work with clients, help churches and make money.  \n\n\nRecommendations\n\n\nBefore your first project:\n\n\nWe recommend that you read through this documentation in order and watch all of the videos at least once before you do your first site.  The first time you go through this, it would be a good idea to watch the videos on an iPad or second laptop so you can work along in Nitrous.  \n\n\nOn every project:\n\n\nIts also a good idea to keep \nthe Setup Guide\n open in a separate tab as you work on every project so you can reference the ten steps.\n\n\nFeedback\n\n\nIf you have any ideas for improving this - please pass them along to Ryan via the \nslack channel\n.", 
            "title": "Welcome and Recommendations"
        }, 
        {
            "location": "/#recommendations", 
            "text": "", 
            "title": "Recommendations"
        }, 
        {
            "location": "/#before-your-first-project", 
            "text": "We recommend that you read through this documentation in order and watch all of the videos at least once before you do your first site.  The first time you go through this, it would be a good idea to watch the videos on an iPad or second laptop so you can work along in Nitrous.", 
            "title": "Before your first project:"
        }, 
        {
            "location": "/#on-every-project", 
            "text": "Its also a good idea to keep  the Setup Guide  open in a separate tab as you work on every project so you can reference the ten steps.", 
            "title": "On every project:"
        }, 
        {
            "location": "/#feedback", 
            "text": "If you have any ideas for improving this - please pass them along to Ryan via the  slack channel .", 
            "title": "Feedback"
        }, 
        {
            "location": "/tooling-up/", 
            "text": "If you are going to do this, you'll need the right tools.  Just follow these four steps and you'll be good to go...\n\n\nAccounts\n\n\nNo matter how you choose to work, you'll need to have these three accounts set up:\n\n\n1. Get a Github account.\n\n\n2. Get an Airtable account.\n\n\n3. Get a Nitrous account.\n\n\n4. Get a Slack account.\n\n\nQuickstart (Nitrous)\n\n\nFor most people, we recommend using Nitrous.  Just by pressing the button below, you'll get a development environment in the cloud with all of the tools you need installed and the files already ready to go.  \n\n\nYou can also use Nitrous to collaborate - when you need help Ryan or Alex can jump on with you and you can watch them code in real time on your screen. To use Nitrous for the first time, just \nPRESS THE BUTTON BELOW.\n\n\n\n\nHere is an explanation of how it works.\n\n\n\n\n\n\n\nAt any point - you can run \nRun \n Start Server\n and then \nPreview \n 30000\n\n\n\n\nWorking Locally (Advanced Users Only)\n\n\nNitrous offers all the tooling you need to get started as a site-rep with sitesfor.church.  You'll never need anymore more than Nitrous, so the rest of this is \nstrictly optional\n.  \n\n\nAfter you have done several sites, you may want to move your process from the cloud to your own computer.  The steps for that will vary based on what kind of computer you have.  Ryan Hayden will help you with that.\n\n\nOn A Mac\n\n\nOn Linux\n\n\nOn Windows", 
            "title": "1. Tooling Up - what you need to get started"
        }, 
        {
            "location": "/tooling-up/#accounts", 
            "text": "No matter how you choose to work, you'll need to have these three accounts set up:", 
            "title": "Accounts"
        }, 
        {
            "location": "/tooling-up/#1-get-a-github-account", 
            "text": "", 
            "title": "1. Get a Github account."
        }, 
        {
            "location": "/tooling-up/#2-get-an-airtable-account", 
            "text": "", 
            "title": "2. Get an Airtable account."
        }, 
        {
            "location": "/tooling-up/#3-get-a-nitrous-account", 
            "text": "", 
            "title": "3. Get a Nitrous account."
        }, 
        {
            "location": "/tooling-up/#4-get-a-slack-account", 
            "text": "", 
            "title": "4. Get a Slack account."
        }, 
        {
            "location": "/tooling-up/#quickstart-nitrous", 
            "text": "For most people, we recommend using Nitrous.  Just by pressing the button below, you'll get a development environment in the cloud with all of the tools you need installed and the files already ready to go.    You can also use Nitrous to collaborate - when you need help Ryan or Alex can jump on with you and you can watch them code in real time on your screen. To use Nitrous for the first time, just  PRESS THE BUTTON BELOW.", 
            "title": "Quickstart (Nitrous)"
        }, 
        {
            "location": "/tooling-up/#here-is-an-explanation-of-how-it-works", 
            "text": "At any point - you can run  Run   Start Server  and then  Preview   30000", 
            "title": "Here is an explanation of how it works."
        }, 
        {
            "location": "/tooling-up/#working-locally-advanced-users-only", 
            "text": "Nitrous offers all the tooling you need to get started as a site-rep with sitesfor.church.  You'll never need anymore more than Nitrous, so the rest of this is  strictly optional .    After you have done several sites, you may want to move your process from the cloud to your own computer.  The steps for that will vary based on what kind of computer you have.  Ryan Hayden will help you with that.", 
            "title": "Working Locally (Advanced Users Only)"
        }, 
        {
            "location": "/tooling-up/#on-a-mac", 
            "text": "", 
            "title": "On A Mac"
        }, 
        {
            "location": "/tooling-up/#on-linux", 
            "text": "", 
            "title": "On Linux"
        }, 
        {
            "location": "/tooling-up/#on-windows", 
            "text": "", 
            "title": "On Windows"
        }, 
        {
            "location": "/setting-up/", 
            "text": "Welcome to a new project! In case you need a reminder, here are the steps to get it up and running:\n\n\nStep 1: Airtable\n\n\n\n\n\n\n\nSet-up a new airtable team for the client.\n\n\nCopy all of the default bases into the client's team.\n\n\nRemove the word \"copy\" from the base name.\n\n\nInvite the client to the base as an author.\n\n\n\n\nTime:\n 5 Minutes\n\n\nStep 2: Set-up the Theme\n\n\n\n\n\nIn \nNitrous\n, use the top menu's \nRun\n drop down menu to switch theme of the client's choosing.\n\n\n\n\nAfter you change the theme, you can confirm it by using \nRun \n 01. Start Server\n\n\nTime:\n 5 Minutes\n\n\nStep 3: _config.yml\n\n\n\n\n\nFollow the comments (Yml comments look like this \n# Comment here\n)\n\n\nTime:\n 5 Minutes\n\n\nStep 4: Customize the following files\n\n\n\n\n\nIn each file, you'll find instructions in the comments.  (Comments will look like this in HTML files \n!--Comment--\n and like this in almost every other kind of file \n/ Comment here\n.)\n\n\n\u251c\u2500\u2500 _css\n\u2502   \u251c\u2500\u2500 _settings.scss (This is where you will change site colors, etc.)\n\u251c\u2500\u2500 _includes\n\u2502   \u251c\u2500\u2500 address.html (Just change the info)\n\u2502   \u2514\u2500\u2500 service-schedule.html (ditto)\n\u251c\u2500\u2500 assets\n\u2502   \u251c\u2500\u2500 calendar_default.jpg (This corresponds with the default images in _config.yml - change them if you want.)\n\u2502   \u251c\u2500\u2500 default_header.jpg\n\u2502   \u251c\u2500\u2500 logo.png (This must be changed to the clients logo.)\n\n\u2514\u2500\u2500 welcome.html\n\n\n\n\nPlease Note!\n We understand this is the most complicated part of this and we will have more documentation and entire pages just about this step.\n\n\nTime:\n 1 to 2 hours\n\n\nStep 5: API Keys\n\n\nAt this point, all of the data on the site (with the exception of our custom welcome page) is just default data.  The information the client has been updating isn't connected yet.  In order to connect it, we need to get a bunch of special values - called API keys - and paste them into the correct spot in our \n_gulp \n airtable \n airtable-config.yml\n file.\n\n\nHere is how that's done:\n\n\n\n\n\n\n\nGo to \nAirtable's API page\n and find the APP Key for each of the client's bases and replace the ones in this file:\n\n\n\u251c\u2500\u2500 _gulp\n\u2502   \u251c\u2500\u2500 Airtable\n|           \u251c\u2500\u2500 airtable-config.yml\n\n\n\n\nTime:\n 5 Minutes\n\n\nStep 6: Set-up and push to a github repository\n\n\n\n\n\nThis is where your \ngithub\n account comes into play.  Github is super geeky and super complicated - but the long and short of it is this - it gives you an easy way to store, backup, and share all of your coding projects.  There are 9 steps to this:\n\n\ni. In Nitrous, make sure that your terminal is on the \"master-theme.\"\n\n\nIt should look like this:\n\n\n\n\nIf it says anything else besides \"master-theme,\" then copy and paste the following code into the terminal window and hit enter.\n\n\ncd ~/code/master-theme\n\n\n\n\nIf you care to know, the \ncd\n command in the terminal stands for \"change directory.\"  \n\n\n\n\nii. Sign in to your github account; and click \"new repsository.\"\n\n\nIn a new tab, open github.com; make sure you are signed in and press the big \"new repository\" button.\n\n\nNote:\n Don't let the big word \n\"repository\"\n scare you.  A repository is just a folder where your project is stored.\n\n\n\n\niii. On the next screen, give your repository a name; and click \"create repository.\"\n\n\nThe name of your repository should probably be the domain name the client has chosen.  You DON'T want to click any of the other checkboxes on this page.\n\n\niv. On the next screen, click the copy button for the second option.\n\n\n\n\nThis should copy the text in that box to your computer's clipboard.\n\n\nNow, go back to nitrous keeping a github tab open.\n\n\nv. Paste the text (that you copied from github in your last step) into the terminal in nitrous, and hit enter.\n\n\nIt will ask you for your github username and password.  Then set up your site as a github repository.\n\n\n\n\n\n\n\n\n\n\nWe aren't out of the woods yet.  There is still three more things we need to do.  These next three commands are ones you are going to be adding often.  \n\n\nvi. Paste or type \ngit add .\n into the terminal, and hit enter.\n\n\n\n\nThis command tells github that you want to add every file and folder in your project to github so that it can keep track of it.\n\n\nvii. Paste or type \ngit commit -m \"added my files\"\n into the terminal, and hit enter.\n\n\n\n\nThis command tells github that you want to commit - or take a snapshot - of all of your files as they are right now.  This may seem tedious now, but it allows you to roll back your project when you make mistakes, and it also allows other people to work on your project without messing up your code.\n\n\nLet's look at this command.  It has three parts: \n\n\n\n\ngit commit\n - This part tells github that you want to commit your files.\n\n\n-m\n - This part is shorthand that allows you to enter a short title.  If you didn't add this, it's no big deal, the terminal would just prompt you for a title. This is a little easier.\n\n\n\"added my files\"\n - Inside of the quotes you can put whatever you want. This should just be a description of what you've done since the last commit.  Because at this point, we haven't committed anything - we are just leaving a note that says this is where we added all of our files at the beginning. \n\n\n\n\nviii. Paste or type \ngit push\n into the terminal, and hit enter.\n\n\n\n\nThis will \npush\n all of your files from this computer to github.  The terminal may ask you for your github username and password again at this step.\n\n\n\n\nPlease note that those last three commands \ngit add .\n , \ngit commit -m \"your message\"\n, and \ngit push\n  should be done early and often in your project.  If you have ever almost finished a research paper, only for your computer to crash, and you have not saved it - you know how much it stinks to lose work.  This will enable you to keep your code secure and to go back to any point of it.  \n\n\nIt will also let you share it with me so we can put it on our production pipeline; which brings me to...\n\n\nix. Add me as a collaborator on github.\n\n\nBack in your github repository page (on the github website), go to \nsettings\n and then \ncollaborators\n and add me as a collaborator. My github username is \npastorryanhayden\n This will enable me to pull down your code and put in our production server (which just keeps the site updating.) \n\n\n\n\nTime:\n 10 Minutes or less. (Even though there are 9 steps to this, it's actually something that you'll get so used to doing that you'll be able to do in no time at all.  I could easily set up a github repo in less than one minute.)\n\n\nStep 7: Setup the Hosting\n\n\n\n\n\nThe last major step is setting up the URLs. To do this, we use a service called \nPubstorm.\n  100% of this is done in Nitrous, in the terminal.  All you need to do is copy and paste a few commands.\n\n\nAs usual, make sure that you are in the master-theme directory in the terminal.  It should look like this - if not, type \ncd ~/code/master-theme\n.  Once this is done, it's just three simple steps:\n\n\ni. Run \nnpm install -g pubstorm\n\n\nThis installs Pubstorm's tools on the system so we can do the next step.\n\n\nii. Run \nstorm login\n\n\nThe terminal will ask for the Pubstorm username and password.\n\n\n\n\nNote:\n The username for our account is \nsitesforchurch@gmail.com\n. The password will be sent to you via email.\n\n\n\n\niii. Run \nstorm init\n\n\nIt's going to ask for two things:\n\n\n\n\nThe folder the site will live in.  This will \nALWAYS\n be \n_site\n\n\nThe name of the site.  Most of the time you should use the URL the church wants without the www. or .com sections (so if the site is biblebaptistmattoon.org you would just use \nbiblebaptistmattoon\n)\n\n\n\n\niv. Run \nstorm publish\n\n\nThis will take a minute and will publish the site to \nwhatevernameyouchose.pubstorm.site\n.\n\n\nv. Copy and paste that url into the \nURL\n field of \n_config.yml\n.\n\n\n(See Step 3 or video for further explanation.). Remember to change this back to \nhttp://localhost:3000\n when testing locally.  \n\n\nTime:\n 10 Minutes or less.\n\n\nStep 8: Pass the site code off to me.\n\n\n\n\n\nWhen you are satisfied with the site and ready to \"go live,\" it's time to pass the site off to me.  Simply...\n\n\ni. run \ngit add .\n\n\nThis adds all the files to git to be watched.\n\n\nii. run \ngit commit -m \"your message here\"\n\n\nReplace \"your message here\" with a description of your progress.  This takes a snapshot of your files now.\n\n\niii. run \ngit push\n\n\nThis command \"pushes\" the files to github so that they  can be shared.\n\n\niv. Copy the repositories URL from its page on github, and send it to me via a slack direct message.\n\n\nOn the github websites, on your repositories page, click the large green \"clone or download\" button and copy and paste the url it gives. Send that to me via a slack direct message.\n\n\n\n\nI will then clone it on the server, and set it up so that it constantly updates.  \n\n\nStep 9: Relax and Get Paid\n\n\n\n\n\nStep 10: Continue to communicate with your client.", 
            "title": "2. Setting Up - ten steps for every project"
        }, 
        {
            "location": "/setting-up/#step-1-airtable", 
            "text": "Set-up a new airtable team for the client.  Copy all of the default bases into the client's team.  Remove the word \"copy\" from the base name.  Invite the client to the base as an author.   Time:  5 Minutes", 
            "title": "Step 1: Airtable"
        }, 
        {
            "location": "/setting-up/#step-2-set-up-the-theme", 
            "text": "In  Nitrous , use the top menu's  Run  drop down menu to switch theme of the client's choosing.   After you change the theme, you can confirm it by using  Run   01. Start Server  Time:  5 Minutes", 
            "title": "Step 2: Set-up the Theme"
        }, 
        {
            "location": "/setting-up/#step-3-_configyml", 
            "text": "Follow the comments (Yml comments look like this  # Comment here )  Time:  5 Minutes", 
            "title": "Step 3: _config.yml"
        }, 
        {
            "location": "/setting-up/#step-4-customize-the-following-files", 
            "text": "In each file, you'll find instructions in the comments.  (Comments will look like this in HTML files  !--Comment--  and like this in almost every other kind of file  / Comment here .)  \u251c\u2500\u2500 _css\n\u2502   \u251c\u2500\u2500 _settings.scss (This is where you will change site colors, etc.)\n\u251c\u2500\u2500 _includes\n\u2502   \u251c\u2500\u2500 address.html (Just change the info)\n\u2502   \u2514\u2500\u2500 service-schedule.html (ditto)\n\u251c\u2500\u2500 assets\n\u2502   \u251c\u2500\u2500 calendar_default.jpg (This corresponds with the default images in _config.yml - change them if you want.)\n\u2502   \u251c\u2500\u2500 default_header.jpg\n\u2502   \u251c\u2500\u2500 logo.png (This must be changed to the clients logo.)\n\n\u2514\u2500\u2500 welcome.html  Please Note!  We understand this is the most complicated part of this and we will have more documentation and entire pages just about this step.  Time:  1 to 2 hours", 
            "title": "Step 4: Customize the following files"
        }, 
        {
            "location": "/setting-up/#step-5-api-keys", 
            "text": "At this point, all of the data on the site (with the exception of our custom welcome page) is just default data.  The information the client has been updating isn't connected yet.  In order to connect it, we need to get a bunch of special values - called API keys - and paste them into the correct spot in our  _gulp   airtable   airtable-config.yml  file.  Here is how that's done:    Go to  Airtable's API page  and find the APP Key for each of the client's bases and replace the ones in this file:  \u251c\u2500\u2500 _gulp\n\u2502   \u251c\u2500\u2500 Airtable\n|           \u251c\u2500\u2500 airtable-config.yml  Time:  5 Minutes", 
            "title": "Step 5: API Keys"
        }, 
        {
            "location": "/setting-up/#step-6-set-up-and-push-to-a-github-repository", 
            "text": "This is where your  github  account comes into play.  Github is super geeky and super complicated - but the long and short of it is this - it gives you an easy way to store, backup, and share all of your coding projects.  There are 9 steps to this:", 
            "title": "Step 6: Set-up and push to a github repository"
        }, 
        {
            "location": "/setting-up/#i-in-nitrous-make-sure-that-your-terminal-is-on-the-master-theme", 
            "text": "It should look like this:   If it says anything else besides \"master-theme,\" then copy and paste the following code into the terminal window and hit enter.  cd ~/code/master-theme   If you care to know, the  cd  command in the terminal stands for \"change directory.\"", 
            "title": "i. In Nitrous, make sure that your terminal is on the \"master-theme.\""
        }, 
        {
            "location": "/setting-up/#ii-sign-in-to-your-github-account-and-click-new-repsository", 
            "text": "In a new tab, open github.com; make sure you are signed in and press the big \"new repository\" button.  Note:  Don't let the big word  \"repository\"  scare you.  A repository is just a folder where your project is stored.", 
            "title": "ii. Sign in to your github account; and click \"new repsository.\""
        }, 
        {
            "location": "/setting-up/#iii-on-the-next-screen-give-your-repository-a-name-and-click-create-repository", 
            "text": "The name of your repository should probably be the domain name the client has chosen.  You DON'T want to click any of the other checkboxes on this page.", 
            "title": "iii. On the next screen, give your repository a name; and click \"create repository.\""
        }, 
        {
            "location": "/setting-up/#iv-on-the-next-screen-click-the-copy-button-for-the-second-option", 
            "text": "This should copy the text in that box to your computer's clipboard.  Now, go back to nitrous keeping a github tab open.", 
            "title": "iv. On the next screen, click the copy button for the second option."
        }, 
        {
            "location": "/setting-up/#v-paste-the-text-that-you-copied-from-github-in-your-last-step-into-the-terminal-in-nitrous-and-hit-enter", 
            "text": "It will ask you for your github username and password.  Then set up your site as a github repository.      We aren't out of the woods yet.  There is still three more things we need to do.  These next three commands are ones you are going to be adding often.", 
            "title": "v. Paste the text (that you copied from github in your last step) into the terminal in nitrous, and hit enter."
        }, 
        {
            "location": "/setting-up/#vi-paste-or-type-git-add-into-the-terminal-and-hit-enter", 
            "text": "This command tells github that you want to add every file and folder in your project to github so that it can keep track of it.", 
            "title": "vi. Paste or type git add . into the terminal, and hit enter."
        }, 
        {
            "location": "/setting-up/#vii-paste-or-type-git-commit-m-added-my-files-into-the-terminal-and-hit-enter", 
            "text": "This command tells github that you want to commit - or take a snapshot - of all of your files as they are right now.  This may seem tedious now, but it allows you to roll back your project when you make mistakes, and it also allows other people to work on your project without messing up your code.  Let's look at this command.  It has three parts:    git commit  - This part tells github that you want to commit your files.  -m  - This part is shorthand that allows you to enter a short title.  If you didn't add this, it's no big deal, the terminal would just prompt you for a title. This is a little easier.  \"added my files\"  - Inside of the quotes you can put whatever you want. This should just be a description of what you've done since the last commit.  Because at this point, we haven't committed anything - we are just leaving a note that says this is where we added all of our files at the beginning.", 
            "title": "vii. Paste or type git commit -m \"added my files\" into the terminal, and hit enter."
        }, 
        {
            "location": "/setting-up/#viii-paste-or-type-git-push-into-the-terminal-and-hit-enter", 
            "text": "This will  push  all of your files from this computer to github.  The terminal may ask you for your github username and password again at this step.   Please note that those last three commands  git add .  ,  git commit -m \"your message\" , and  git push   should be done early and often in your project.  If you have ever almost finished a research paper, only for your computer to crash, and you have not saved it - you know how much it stinks to lose work.  This will enable you to keep your code secure and to go back to any point of it.    It will also let you share it with me so we can put it on our production pipeline; which brings me to...", 
            "title": "viii. Paste or type git push into the terminal, and hit enter."
        }, 
        {
            "location": "/setting-up/#ix-add-me-as-a-collaborator-on-github", 
            "text": "Back in your github repository page (on the github website), go to  settings  and then  collaborators  and add me as a collaborator. My github username is  pastorryanhayden  This will enable me to pull down your code and put in our production server (which just keeps the site updating.)    Time:  10 Minutes or less. (Even though there are 9 steps to this, it's actually something that you'll get so used to doing that you'll be able to do in no time at all.  I could easily set up a github repo in less than one minute.)", 
            "title": "ix. Add me as a collaborator on github."
        }, 
        {
            "location": "/setting-up/#step-7-setup-the-hosting", 
            "text": "The last major step is setting up the URLs. To do this, we use a service called  Pubstorm.   100% of this is done in Nitrous, in the terminal.  All you need to do is copy and paste a few commands.  As usual, make sure that you are in the master-theme directory in the terminal.  It should look like this - if not, type  cd ~/code/master-theme .  Once this is done, it's just three simple steps:", 
            "title": "Step 7: Setup the Hosting"
        }, 
        {
            "location": "/setting-up/#i-run-npm-install-g-pubstorm", 
            "text": "This installs Pubstorm's tools on the system so we can do the next step.", 
            "title": "i. Run npm install -g pubstorm"
        }, 
        {
            "location": "/setting-up/#ii-run-storm-login", 
            "text": "The terminal will ask for the Pubstorm username and password.   Note:  The username for our account is  sitesforchurch@gmail.com . The password will be sent to you via email.", 
            "title": "ii. Run storm login"
        }, 
        {
            "location": "/setting-up/#iii-run-storm-init", 
            "text": "It's going to ask for two things:   The folder the site will live in.  This will  ALWAYS  be  _site  The name of the site.  Most of the time you should use the URL the church wants without the www. or .com sections (so if the site is biblebaptistmattoon.org you would just use  biblebaptistmattoon )", 
            "title": "iii. Run storm init"
        }, 
        {
            "location": "/setting-up/#iv-run-storm-publish", 
            "text": "This will take a minute and will publish the site to  whatevernameyouchose.pubstorm.site .", 
            "title": "iv. Run storm publish"
        }, 
        {
            "location": "/setting-up/#v-copy-and-paste-that-url-into-the-url-field-of-_configyml", 
            "text": "(See Step 3 or video for further explanation.). Remember to change this back to  http://localhost:3000  when testing locally.    Time:  10 Minutes or less.", 
            "title": "v. Copy and paste that url into the URL field of _config.yml."
        }, 
        {
            "location": "/setting-up/#step-8-pass-the-site-code-off-to-me", 
            "text": "When you are satisfied with the site and ready to \"go live,\" it's time to pass the site off to me.  Simply...", 
            "title": "Step 8: Pass the site code off to me."
        }, 
        {
            "location": "/setting-up/#i-run-git-add", 
            "text": "This adds all the files to git to be watched.", 
            "title": "i. run git add ."
        }, 
        {
            "location": "/setting-up/#ii-run-git-commit-m-your-message-here", 
            "text": "Replace \"your message here\" with a description of your progress.  This takes a snapshot of your files now.", 
            "title": "ii. run git commit -m \"your message here\""
        }, 
        {
            "location": "/setting-up/#iii-run-git-push", 
            "text": "This command \"pushes\" the files to github so that they  can be shared.", 
            "title": "iii. run git push"
        }, 
        {
            "location": "/setting-up/#iv-copy-the-repositories-url-from-its-page-on-github-and-send-it-to-me-via-a-slack-direct-message", 
            "text": "On the github websites, on your repositories page, click the large green \"clone or download\" button and copy and paste the url it gives. Send that to me via a slack direct message.   I will then clone it on the server, and set it up so that it constantly updates.", 
            "title": "iv. Copy the repositories URL from its page on github, and send it to me via a slack direct message."
        }, 
        {
            "location": "/setting-up/#step-9-relax-and-get-paid", 
            "text": "", 
            "title": "Step 9: Relax and Get Paid"
        }, 
        {
            "location": "/setting-up/#step-10-continue-to-communicate-with-your-client", 
            "text": "", 
            "title": "Step 10: Continue to communicate with your client."
        }, 
        {
            "location": "/settling-up/", 
            "text": "Add payment info here.", 
            "title": "3. Settling Up - how payment works"
        }, 
        {
            "location": "/following-up/", 
            "text": "Add payment info here.", 
            "title": "4. Following Up - communicating with the client"
        }, 
        {
            "location": "/powering-up/", 
            "text": "Add payment info here.", 
            "title": "5. Powering Up - learning to do it all better"
        }
    ]
}